import { declare } from '../../src/declare/declare';
import { Interact } from '../../src/Interact/Interact';
import * as fixtureApi from '../fixtures/api';

describe('Interact', () => {
    const api = declare({
        test: {
            worker: (num1: number) => num1 + 10,
        },
    });

    describe('with', () => {
        it("should throw if the function passed in wasn't generated by ThreadzAPI", () => {
            expect(() => Interact.with(async () => 'hi')).toThrow();
        });

        it('should return a new Interact instance', () => {
            expect(Interact.with(api.workers.test)).toBeInstanceOf(Interact);
        });
    });

    // describe('go', () => {
    //     it("should throw if the function passed in wasn't generated by ThreadzAPI", async () => {
    //         const { api } = fixtureApi;

    //         const worker = api.interactWith('test').go();
    //         const promise = new Promise((resolve) => worker.on('started', () => resolve(true)));

    //         await expect(promise).resolves.toBeTruthy();
    //     });

    // });
});
